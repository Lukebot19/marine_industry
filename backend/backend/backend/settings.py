"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

import environ

env = environ.Env()

BASE_DIR = Path(__file__).resolve().parent.parent
env.read_env(os.path.join(BASE_DIR.parent, ".env"))
# Build paths inside the project like this: BASE_DIR / 'subdir'.
# This variable is True when running in a development environment
if "APP_DEVELOPMENT" in os.environ:
    DEVELOPMENT = (
        str.lower(os.environ.get("APP_DEVELOPMENT", default="False")) == "true"
    )
else:
    DEVELOPMENT = str.lower(env("APP_DEVELOPMENT", default="False")) == "true"

# This variable is True when running in debug mode
# By default, we also enable debug in development, but you may wish to change this
if "APP_DEBUG" in os.environ:
    DEBUG = (
        DEVELOPMENT or str.lower(os.environ.get("APP_DEBUG", default="False")) == "true"
    )
else:
    DEBUG = DEVELOPMENT or str.lower(env("APP_DEBUG", default="False")) == "true"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
if DEVELOPMENT:
    SECRET_KEY = "test"
else:
    if "SECRET_KEY" in os.environ:
        SECRET_KEY = os.environ["SECRET_KEY"]
    else:
        SECRET_KEY = env("SECRET_KEY")


ALLOWED_HOSTS = ["*"]
CORS_ORIGIN_ALLOW_ALL = DEBUG

STATIC_URL = "/static/api/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Application definition

DJANGO_APPS = [
    "daphne",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "corsheaders",
    "django_filters",
    "drf_yasg",
]

API_APPS = [
    "backend",
    "vessels",
]

INSTALLED_APPS = DJANGO_APPS + API_APPS

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",
    }
}

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ASGI_APPLICATION = "backend.asgi.application"
WSGI_APPLICATION = "backend.wsgi.application"


REST_FRAMEWORK = {
    # Must explicitly set versioning
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.NamespaceVersioning",
    # Generic view behavior: Defaults are None
    "DEFAULT_FILTER_BACKENDS": ["django_filters.rest_framework.DjangoFilterBackend"],
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ),
}

TEST_RUNNER = "xmlrunner.extra.djangotestrunner.XMLTestRunner"
TEST_OUTPUT_DIR = os.environ.get("TEST_OUTPUT_DIR", "./test-results")
TEST_OUTPUT_FILE_NAME = os.environ.get("TEST_OUTPUT_FILE_NAME", "results.xml")
# Use test docstrings when outputting descriptions to command line
TEST_OUTPUT_DESCRIPTIONS = True

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-uk"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SWAGGER_SETTINGS = {"DEFAULT_INFO": "backend.urls.api_info"}
